name: New tag

on:
  push:
  # create: # @TODO:
  #   tags:
  #     - v*

jobs:

  static:
    runs-on: ubuntu-latest
    name: prepare static data
    steps:
    - uses: actions/checkout@v3
    - name: Restore static
      id: restore-static
      uses: actions/cache@v3
      with:
        path: |
          static/dictionaries
          static/sentences
        key: cache-static
    - name: Generate static
      if: steps.restore-static.outputs.cache-hit != 'true'
      run: |
        apt-get -y install --no-install-recommends python3-pip
        pip3 install nltk
        cd .ci
        make static/dictionaries
        make static/sentences
    - name: Cache static
      id: save-static
      uses: actions/cache/save@v3
      with:
        path: |
          static/dictionaries
          static/sentences
        key: ${{ steps.restore-static.outputs.cache-primary-key }}

  build:
    runs-on: ubuntu-latest
    name: ${{ matrix.goos }} ${{ matrix.goarch }} build
    strategy:
      matrix:
        include:
          - {build_arch: linux_arm64}
          - {build_arch: linux_amd64}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: 1.20
    - name: Install cmake and libs
      run: apt-get -y install --no-install-recommends cmake libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libdbus-1-dev
    - uses: actions/cache@v3
      with:
        path: |
          static/dictionaries
          static/sentences
        key: cache-static
    - name: build
      env:
        ARCH_INSTALLS: ${{ matrix.build_arch }}
      run: |
        echo "" > cmake/sign.sh
        ./build-release.sh
        ls -lah
    - name: upload release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: fb2c_*.zip
